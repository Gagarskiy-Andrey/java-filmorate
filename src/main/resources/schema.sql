DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS FRIENDS CASCADE;
DROP TABLE IF EXISTS GENRES CASCADE;
DROP TABLE IF EXISTS MPA CASCADE;
DROP TABLE IF EXISTS FILMS CASCADE;
DROP TABLE IF EXISTS LIKES CASCADE;
DROP TABLE IF EXISTS FILM_GENRE CASCADE;

CREATE TABLE IF NOT EXISTS FILMS (
	FILM_ID INT PRIMARY KEY AUTO_INCREMENT,
	NAME VARCHAR(255) NOT NULL,
	DESCRIPTION VARCHAR(255) NOT NULL,
	RELEASE_DATE DATE,
	DURATION INT NOT NULL,
	MPA_ID INT
);

CREATE TABLE IF NOT EXISTS USERS (
	USER_ID INT PRIMARY KEY AUTO_INCREMENT,
	EMAIL VARCHAR(255) NOT NULL UNIQUE,
	LOGIN VARCHAR(255) NOT NULL,
	USER_NAME VARCHAR(255) NOT NULL,
	BIRTHDAY DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS GENRES (
	GENRE_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	GENRE_NAME VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILM_GENRE (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FILM_ID INT NOT NULL,
	GENRE_ID INT NOT NULL,
	FOREIGN KEY(FILM_ID) REFERENCES FILMS(FILM_ID),
    FOREIGN KEY(GENRE_ID) REFERENCES GENRES(GENRE_ID)
);

CREATE TABLE IF NOT EXISTS MPA (
	MPA_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	MPA_NAME VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS FRIENDS (
	USER_ID INT NOT NULL REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	FRIEND_ID INT NOT NULL REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	PRIMARY KEY (USER_ID, FRIEND_ID)
);

CREATE TABLE PUBLIC.LIKES (
	FILM_ID INT,
	USER_ID INT,
	PRIMARY KEY(USER_ID, FILM_ID),
    FOREIGN KEY(film_id) REFERENCES FILMS(FILM_ID),
    FOREIGN KEY(user_id) REFERENCES USERS(USER_ID)
);